name: CI/CD Pipeline (Skip Tests)

# 1. O Gatilho (Trigger)
# Roda a pipeline sempre que houver um push na branch 'main'
on:
  pull_request:
    branches: [ "main" ]

jobs:
  # 2. Primeiro Job: Construir e Publicar a Imagem
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Etapa de build agora com -DskipTests
      - name: Build with Maven (skip tests)
        run: mvn clean install -DskipTests

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  # 3. Segundo Job: Fazer o Deploy no Servidor
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # 1. Copia os arquivos para o servidor
      - name: Copy docker-compose and nginx.conf to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,nginx.conf"
          target: "/home/geslucian1/estudos-devops"

      # 2. Conecta via SSH e executa o deploy
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/geslucian1/estudos-devops

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull ghcr.io/${{ github.repository }}:latest

            docker compose down
            docker compose pull
            docker compose up -d
